import { Entity, Column, BaseEntity, PrimaryGeneratedColumn } from 'typeorm'

// each entity is more or less a table in the database
// BaseEntity is a class which has a bunch of methods like User.create()
// optional users is the name of the table
@Entity('users')
export class User extends BaseEntity {
  // a random string generated by the system
  @PrimaryGeneratedColumn('uuid') id: string

  // option to put unique column @Column('varchar', { unique: true })
  // postgres will throw error and pass to typeorm when same email registering user
  @Column('varchar', { length: 255 })
  email: string

  @Column('text') password: string

  @Column('boolean', { default: false })
  confirmed: boolean

  // @BeforeInsert will run and do anything right before it is inserted into database
  // @BeforeInsert()
  // addId() {
  //   this.id = uuidv4()
  // }
}
